<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sboy_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0;
//
normal = true;
move = false;
ghost = false;
flashlight = false;
darkness = true;
characterdirection = "down";
playerhit = false;
hiding = false;
pause = false;




// player variables
batteryusage = 0.5;
hp = 4;
spd = 1.25;
lens = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerhit = false;
image_alpha = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//inputs
key_up = keyboard_check(ord('W'));
key_down = keyboard_check(ord('S'));
key_right = keyboard_check(ord('D'));
key_left = keyboard_check(ord('A'));

key_action = keyboard_check(ord('C'));//A
key_actionpressed = keyboard_check_pressed(ord('C'));//A
key_item = keyboard_check(ord('V'));//B
key_menu = keyboard_check(ord('Z'));//Start
key_switch =keyboard_check_pressed(ord('B'));//Select

//state normal
if normal = true
{
// hit by enemy
if playerhit = true
{
//add hit animation
    image_alpha = 0.5;
    if (alarm[0] = -1) alarm = 60
}




//movement
/*if (place_meeting(x,y,obj_wall) &amp;&amp; ghost = false)
{
    spd = 0
}
*/

if key_up &amp;&amp; move = true
{
    if y &lt;= 88 // change to global var for all 4 walls
    {
            
    }
    else
    {
            
        y -= spd
    }            
}

if key_down &amp;&amp; move = true
{
    if y &gt;= 196 
    {
            
    }
    else
    {
           
        y += spd
    }            
}        
    
if key_right &amp;&amp; move = true
{
    if x &gt;= 338 
    {
            
    }
    else
    {
            
        x += spd
    }            
}
   
if key_left &amp;&amp; move = true
{
    if x &lt;= 10 
    {
            
    }
    else
    {
            
        x -= spd
        }            
}

//ghost threshold
if x &gt;= 175

{
    ghost = true;
    if flashlight = true
    {
        instance_create(x-10,y,obj_flashlight)
        flashlight = false
    
    }
}

else 

{
    ghost = false;
}

//animations
if (key_left || key_right || key_up || key_down) &amp;&amp; !key_item
{
    move = true;
    spd = 1.25;  
}
else 
{
    move = false;
    spd = 0;
}   

if move = false
{  
   if (characterdirection == "up")
    {
        if darkness = false { sprite_index = sboy_back; }
        if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_back; }
        if darkness = true { sprite_index = sboy_dback; }
        if ghost = true {sprite_index = sboyghost_back;}
    }
    if (characterdirection == "down")
    {
        if darkness = false { sprite_index = sboy_front; }
        if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_front; }
        if darkness = true { sprite_index = sboy_dfront; }
        if ghost = true {sprite_index = sboyghost_front;}
    }
    if (characterdirection == "left")
    {
        if darkness = false { sprite_index = sboy_left; }
        if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_left; }
        if darkness = true { sprite_index = sboy_dleft; }
        if ghost = true {sprite_index = sboyghost_left;}
    }
        
    if (characterdirection == "right")
    {
        if darkness = false { sprite_index = sboy_right; }
        if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_right; }
        if darkness = true { sprite_index = sboy_dright; }
        if ghost = true {sprite_index = sboyghost_right;}
    }
}

if move = true
{
    if key_up
    {
    characterdirection = "up";
    image_speed = 0.125 
    if darkness = false {sprite_index = sboy_backwalk;}
    if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_backwalk; }
    if darkness = true {sprite_index = sboy_dbackwalk;}
    if ghost = true {sprite_index = sboyghost_back;}
    
    }

    if key_down
    {
    characterdirection = "down";
    image_speed = 0.125
    if darkness = false {sprite_index = sboy_frontwalk;}
    if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_frontwalk; }
    if darkness = true {sprite_index = sboy_dfrontwalk}
    if ghost = true {sprite_index = sboyghost_front;}
    }

    if key_left
    {
    characterdirection = "left";
    image_speed = 0.125
    if darkness = false {sprite_index = sboy_leftwalk;}
    if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_leftwalk; }
    if darkness = true {sprite_index = sboy_dleftwalk;}
    if ghost = true {sprite_index = sboyghost_left;}
    }        
    
    if key_right
    {
    characterdirection = "right";
    image_speed = 0.125
    if darkness = false {sprite_index = sboy_rightwalk;}
    if darkness = false &amp;&amp; flashlight = true { sprite_index = sboyflash_rightwalk; }
    if darkness = true {sprite_index = sboy_drightwalk;}
    if ghost = true {sprite_index = sboyghost_right;}
    }
}  

//item interaction
//flashlight pick up

if place_meeting(x,y,obj_flashlight) &amp;&amp; key_action
{
    global.player1flash = 1;
    flashlight = true
    instance_destroy(obj_flashlight)
}

if place_meeting(x,y,obj_battery) &amp;&amp; key_action
{
    global.player1battery = 600;
    instance_destroy(obj_battery)
}

// flashlight use //
if flashlight = false
{
global.player1flash = 0;
}

if global.player1flash = 2
{
    global.player1battery -= batteryusage;
}


if (!key_item &amp;&amp; flashlight = true) || global.player1battery &lt;= 0 || (playerhit = true &amp;&amp; flashlight = true)
{
    global.player1flash = 1;
    instance_destroy(obj_lightup);
    instance_destroy(obj_lightupright);
    instance_destroy(obj_lightupleft);
    instance_destroy(obj_lightdown);
    instance_destroy(obj_lightdownright);
    instance_destroy(obj_lightdownleft);
    instance_destroy(obj_lightleft);
    instance_destroy(obj_lightright);
}

//animation


if key_item &amp;&amp; flashlight = true 
{   

    if global.player1battery &gt; 0
    {
    global.player1flash = 2;
    }
    
    global.player1battery -=1;
        
    if key_up
    {
    characterdirection = "up";
    sprite_index = sboyflash_back ;       
    }
        
    if key_down
    {
    characterdirection = "down";
    sprite_index = sboyflash_front
    }
 
    if key_left &amp;&amp; !key_up
    {
    characterdirection = "left";
    sprite_index = sboyflash_left;
    }
   
     if key_right &amp;&amp; !key_up
    {
    characterdirection = "right";
    sprite_index = sboyflash_right
    }
    
    if key_up &amp;&amp; key_right 
    {
    characterdirection = "upright";
    sprite_index = sboyflash_upright
    }
        
    if key_left &amp;&amp; key_up 
    {
    characterdirection = "upleft";
    sprite_index = sboyflash_upleft
    }

    if key_down &amp;&amp; key_right 
    {
    characterdirection = "downright";
    sprite_index = sboyflash_downright
    }
    
    if key_down &amp;&amp; key_left 
    {
    characterdirection = "downleft";
    sprite_index = sboyflash_downleft
    } 

//attack    
    
    if global.player1battery &gt;= 0
    {
        if characterdirection = "up"
        {    
        if !instance_exists(obj_lightup){instance_create(obj_sboy.x+6,obj_sboy.y-3,obj_lightup);}
        }
        else
        {
        instance_destroy(obj_lightup)
        }
    
        if characterdirection = "upright"
        {    
        if !instance_exists(obj_lightupright){instance_create(obj_sboy.x+6,obj_sboy.y-3,obj_lightupright);}
        }
        else
        {
        instance_destroy(obj_lightupright)
        }
        
        if characterdirection = "upleft"
        {    
        if !instance_exists(obj_lightupleft){instance_create(obj_sboy.x+3,obj_sboy.y-3,obj_lightupleft);}
        }
        else
        {
        instance_destroy(obj_lightupleft)
        }
        
        if characterdirection = "down"
        {    
        if !instance_exists(obj_lightdown){instance_create(obj_sboy.x-6,obj_sboy.y-1,obj_lightdown);}
        }
        else
        {
        instance_destroy(obj_lightdown)
        }
        
        if characterdirection = "downright"
        {    
        if !instance_exists(obj_lightdownright){instance_create(obj_sboy.x+1,obj_sboy.y-1,obj_lightdownright);}
        }
        else
        {
        instance_destroy(obj_lightdownright)
        }
        
        if characterdirection = "downleft"
        {    
        if !instance_exists(obj_lightdownleft){instance_create(obj_sboy.x-6,obj_sboy.y-2,obj_lightdownleft);}
        }
        else
        {
        instance_destroy(obj_lightdownleft)
        }
        
        if characterdirection = "right"
        {    
        if !instance_exists(obj_lightright){instance_create(obj_sboy.x+7,obj_sboy.y-1,obj_lightright);}
        }
        else
        {
        instance_destroy(obj_lightright)
        }
        
        if characterdirection = "left"
        {    
        if !instance_exists(obj_lightleft){instance_create(obj_sboy.x-8,obj_sboy.y-2,obj_lightleft);}
        }
        else
        {
        instance_destroy(obj_lightleft)
        }
    }        
}

//health
//4.Brave 3.Alert 2.Nerves 1.Terror 0.None
if hp &lt;= 0
{
    hp = 0;
    hiding = true;
    normal = false;  
}

//lens
// 1. normal 2. red 3. blue 4. green
if flashlight = true
{
    if key_switch 
    {
        lens += 1;
    }

    if lens &gt; 4
    {
        lens =1;
    }
}

}
// hiding
if hiding = true
{
    if flashlight = true {if !instance_exists(obj_flashlight){ instance_create(x,y,obj_flashlight)}}
    sprite_index = sboy_rightwalk;
    image_speed = 0.25;
    move_towards_point(obj_sboyhidingspot.x,obj_sboyhidingspot.y,2)
    
    if place_meeting(x,y-10,obj_sboyhidingspot)
    {
        image_alpha = 0;
        move_towards_point(obj_sboyhidingspot.x,obj_sboyhidingspot.y,0)  
    }
}

// cut scene/reading
if normal = false
{
    image_speed = 0;
    spd = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
